{"version":3,"file":"index.cjs","sources":["../src/index.js"],"sourcesContent":["const errorOverlayMiddleware = require('react-dev-utils/errorOverlayMiddleware')\n\nconst chunkPathBasic = require.resolve('./entries/basic.mjs')\nconst chunkPathDevServer = require.resolve('./entries/devserver.mjs')\n\nclass ErrorOverlayPlugin {\n  apply(compiler) {\n    const className = this.constructor.name\n\n    if (compiler.options.mode !== 'development') return\n\n    const devServerEnabled = !!compiler.options.devServer\n    const sockOptions = {}\n    if (devServerEnabled) {\n      // In the webpack config it's possible to override the websocket server's\n      // connect URL for clients that need to connect through a proxy or other means.\n      //\n      // Use a webSocketURL config if present, otherwise default to the same address\n      // as the devServer:\n      sockOptions.sockHost =\n        compiler.options.devServer.client?.webSocketURL?.hostname ||\n        compiler.options.devServer.host\n      sockOptions.sockPath =\n        compiler.options.devServer.client?.webSocketURL?.pathname ||\n        (compiler.options.devServer.webSocketServer === \"object\" && compiler.options.devServer.webSocketServer.options?.path) ||\n        '/ws'\n      sockOptions.sockPort =\n        compiler.options.devServer.client?.webSocketURL?.port ||\n        compiler.options.devServer.port\n    }\n\n    compiler.hooks.entryOption.tap(className, (context, entry) => {\n      adjustEntry(entry, devServerEnabled, sockOptions)\n    })\n\n    compiler.hooks.afterResolvers.tap(className, ({ options }) => {\n      if (devServerEnabled) {\n        const originalOnBeforeSetupMiddleware =\n          options.devServer.onBeforeSetupMiddleware\n        options.devServer.setupMiddlewares = (middlewares, devServer) => {\n          if (originalOnBeforeSetupMiddleware) {\n            originalOnBeforeSetupMiddleware(devServer)\n          }\n          middlewares.unshift(errorOverlayMiddleware());\n          return middlewares;\n        }\n      }\n    })\n  }\n}\n\nfunction adjustEntry(entry, enableDevServer, sockOptions) {\n  if (typeof entry === 'string') {\n    entry = [entry] // for anonymous single entry points\n  }\n\n  if (Array.isArray(entry)) {\n    if (enableDevServer) {\n      const sockHost = sockOptions.sockHost\n        ? `&sockHost=${sockOptions.sockHost}`\n        : ''\n      const sockPath = sockOptions.sockPath\n        ? `&sockPath=${sockOptions.sockPath}`\n        : ''\n      const sockPort = sockOptions.sockPort\n        ? `&sockPort=${sockOptions.sockPort}`\n        : ''\n      const chunkPathDevServerWithParams = `${chunkPathDevServer}?${sockHost}${sockPath}${sockPort}`\n      if (!entry.includes(chunkPathDevServerWithParams)) {\n        entry.unshift(chunkPathDevServerWithParams)\n      }\n    }\n\n    if (!entry.includes(chunkPathBasic)) {\n      entry.unshift(chunkPathBasic)\n    }\n  } else {\n    Object.keys(entry).forEach((entryName) => {\n      entry[entryName] = adjustEntry(\n        entry[entryName],\n        enableDevServer,\n        sockOptions,\n      )\n    })\n  }\n\n  return entry\n}\n\nmodule.exports = ErrorOverlayPlugin\n"],"names":[],"mappings":"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"}